<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Productos en tiempo real</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 20px;
            padding: 20px;
            max-width: 900px;
            margin: auto;
        }
        h1 {
            font-size: 24px;
            color: #333;
            text-align: center;
        }
        ul {
            list-style-type: none;
            padding: 0;
        }
        li {
            background-color: #fff;
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
            font-size: 18px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        li strong {
            font-weight: bold;
        }
        button {
            background-color: #ff5c5c;
            border: none;
            color: white;
            padding: 8px 12px;
            text-align: center;
            font-size: 14px;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }
        button:hover {
            background-color: #e60000;
        }
        form {
            background-color: #fff;
            border: 1px solid #ddd;
            padding: 20px;
            margin-top: 20px;
            border-radius: 5px;
        }
        form label {
            font-weight: bold;
            margin-right: 10px;
        }
        form input {
            margin-bottom: 10px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            width: calc(100% - 22px);
            box-sizing: border-box;
        }
        form button {
            background-color: #28a745;
            border: none;
            color: white;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }
        form button:hover {
            background-color: #218838;
        }
        .form-group {
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <h1>Productos (Tiempo real)</h1>
    <ul id="productList"></ul>

    <h2>Agregar Producto</h2>
    <form id="productForm">
        <div class="form-group">
            <label for="title">Título:</label>
            <input type="text" id="title" placeholder="Nombre del producto" required>
        </div>
        <div class="form-group">
            <label for="description">Descripción:</label>
            <input type="text" id="description" placeholder="Descripción del producto" required>
        </div>
        <div class="form-group">
            <label for="price">Precio:</label>
            <input type="number" id="price" placeholder="Precio del producto" required>
        </div>
        <button type="submit">Agregar</button>
    </form>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        // Actualizamos la lista de productos en tiempo real
        socket.on('productList', (products) => {
            const productList = document.getElementById('productList');
            productList.innerHTML = ''; // Limpiamos la lista actual

            products.forEach(product => {
                const li = document.createElement('li');
                li.innerHTML = `
                    <div>
                        <strong>${product.title}</strong>: ${product.description} - $${product.price}
                    </div>
                    <button onclick="deleteProduct('${product.id}')">Eliminar</button>
                `;
                productList.appendChild(li);
            });
        });

        // Manejar el formulario para agregar un nuevo producto
        const productForm = document.getElementById('productForm');
        productForm.addEventListener('submit', (e) => {
            e.preventDefault();

            const newProduct = {
                title: document.getElementById('title').value,
                description: document.getElementById('description').value,
                price: document.getElementById('price').value
            };

            socket.emit('newProduct', newProduct); // Emitir el nuevo producto vía WebSocket

            // Limpiar los campos después de enviar el producto
            productForm.reset();
        });

        // Eliminar un producto
        function deleteProduct(productId) {
            socket.emit('deleteProduct', productId); // Emitir la eliminación del producto
        }
    </script>
</body>
</html>
